#!/usr/bin/env bash

# fucntions
function on_exit {
 rm -f *.$$
}

function towns_retrieve {
 meteo_reg=$( elinks -source "${url_base}/${1}" )
 towns_raw=$( echo "$meteo_reg" | sed -e "1,/<td width=100\%><nobr>Станция (город)<\/nobr><BR>/ d" -e "/<\/select><\/td>/,$ d" )
 echo "$towns_raw" | sed -s "s/<option value=\"\(.*\)\".*>\(.*\)<\/option>/\1 (\2)/g" 
}

function regions_retrieve {
 regions=$( echo "$meteo" | sed -e "1,/<td>Область<BR>/ d" -e "/<\/select><\/td>/,$ d" )
 echo "$regions" | sed -s "s/<option value=\"\(.*\)\".*>\(.*\)<\/option>/\1 (\2)/g" 
}

function meteodb_update {
 regions=$( elinks -source "http://meteoinfo.ru/pogoda/" | sed -e "1,/<td>Область<BR>/ d" -e "/<\/select><\/td>/,$ d")
 echo "$regions" | sed -s "s/<option value=\"\(.*\)\".*>\(.*\)<\/option>/\1;\2/g" > regions.$$
 for reg in $( cat regions.$$ | cut -d ";" -f1 ) ; do
  reg_out=$( elinks -source "http://meteoinfo.ru/pogoda/russia/${reg}" )
  towns_out=$( echo "$reg_out" | sed -e "1,/<td width=100\%><nobr>Станция (город)<\/nobr><BR>/ d" -e "/<\/select><\/td>/,$ d" )
  towns=$( echo "$towns_out" | sed -s "s/<option value=\"\(.*\)\".*>\(.*\)<\/option>/${reg}\/\1;\2/g" )
  echo "$towns"
 done
}

function town_search { 
 db_line=$( grep -i -m 1 "$1" "$( dirname $0 )/meteoinfo.db" )

 if [ -z "$db_line" ] ; then
  echo "Town is not found" 
  exit 1
 else 
  echo "$db_line"
 fi 
}

trap "on_exit" EXIT

# use notification
if [ $# -eq 0 ] ; then
 reg="moscow-area"
 town="moscow"
elif [ "$1" == "-update" ] ; then
 meteodb_update
elif [ "$1" == "-list" ] ; then
 cat $( dirname $0 )/meteoinfo.db | $( echo $PAGER || less )
 exit 0
elif [ $# -eq 2 ] && [ "$1" == "-s" ] ; then
 search_result=$( town_search "$2" )
 reg=$( echo "$search_result" | cut -d "/" -f1 )
 town=$( echo "$search_result" | cut -d "/" -f2 | sed -s "s/;.*$//" )
elif [ $# -ne 2 ] ; then
 cat <<EOF >&2
Usage: 
      $( basename $0 ) 'region' 'town' -- shows statistics for 'town' from 'region'
      $( basename $0 ) -s 'town'  -- searches statistics for the 'town'
 
Example: 
      $( basename $0 ) republic-bashkortostan ufa 
      $( basename $0 ) -s "Уфа"

Help: $( basename $0 ) -update -- updates list of regions and towns
      $( basename $0 ) -list -- prints out list of regions and towns
EOF
 exit 0
else
 reg="$1"
 town="$2"
fi

# body

url_base="http://meteoinfo.ru/pogoda/russia"
output=$( elinks -source "$url_base/${reg}/${town}" )
stats=$( echo "$output" | sed -e "1,/<\/tr><\/table><\/form>/ d" -e "/<\/TR>/,$ d" ) 
#echo "$stats" | elinks --dump --no-references -no-numbering ### 

town_db=$( town_search "${reg}/${town}" | cut -d ";" -f2 | sed -s "s/^\s*//g" | sed -s "s/\s*$//g" )
time=$( echo "$stats" | grep -i "<td align=center><nobr>" | sed -s "s/^.*<td align=center><nobr>\(.*\)<\/td><td><\/td><td><\/td><\/tr>/\1/" | sed -s "s/<[^>]*>/ /g" | sed -s "s/ \{2,\}/ /g" )

echo "${town_db}. ${time}"

echo "$stats" | while read line ; do
 th_counter=$( echo "$line" | grep -c "<th class=pogodacell2>" )
 td_counter=$( echo "$line" | grep -c "<td class=pogodacell>" )

 if [ $th_counter -ne 0 ] ; then
     param=$( echo "$line" | sed -s "s/^.*<th class=pogodacell2>\([^<].*\)<\/[^>]*>/\1/g" | sed -s "s/<[^>]*>//g" | sed -s "s/^\s*//g" | sed -s "s/\s*$//g" )
     printf "%s\t" "$param"
 elif [ $td_counter -ne 0 ] ; then
     value=$( echo "$line" | sed -s "s/^.*<td class=pogodacell>\([^<].*\)<\/[^>]*>/\1/g" | sed -s "s/<[^>]*>//g" | sed -s "s/^\s*//g" | sed -s "s/\s*$//g" )
     echo "$value" >> weather.$$
     printf "%s\n" "$value"
 fi 
done

exit 0
